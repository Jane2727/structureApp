{"version":3,"sources":["helpers/Scorocode.js","components/list-item/index.js","components/list-item/list-item.js","helpers/Calculate.js","components/list/index.js","components/list/list.js","components/equipment-item/index.js","components/equipment-item/equipment-item.js","components/equipment-screen/index.js","components/equipment-screen/equipment-screen.js","components/app/index.js","components/app/app.js","index.js"],"names":["Scorocode","Init","ApplicationID","JavaScriptKey","MasterKey","getBuildings","a","buildings","Query","find","items","result","map","name","rooms","id","_id","children","getEquipment","equipment","count","room","ListItem","this","props","child","selected","qty","classNames","className","onClick","Component","findEquipmentForAllChildren","equipments","arrayOfRooms","findEquipForRoom","elem","some","roomId","filter","equip","undefined","length","push","roomName","equipInfo","el","countEquipment","arr","reduce","totalAcc","acc","List","handleClickOnItem","item","itemSelect","renderElem","selectedItem","roomInfo","totalCount","key","childElems","buildingsStructure","building","EquipmentItem","EquipmentScreen","state","currentEquipments","prevProps","setState","addButton","App","console","info","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4862ff0.chunk.js","sourcesContent":["/* global Scorocode */\r\n\r\nScorocode.Init({\r\n  ApplicationID: \"3196b2e873234547ad8b06ed636d3538\",\r\n  JavaScriptKey: \"5e85f685a23e44e6abad95accc1dd2ea\",\r\n  MasterKey: \"659d718ff9664f6fafbdb79efc93cb34\"\r\n});\r\n\r\nconst _transformBuildingsData = data =>\r\n  data.map(({ name, rooms, _id }) => ({\r\n    id: _id,\r\n    name,\r\n    children: rooms\r\n  }));\r\n\r\nconst _transformEquipmentData = data =>\r\n  data.map(({ count, name, _id, room }) => ({\r\n    id: _id,\r\n    name,\r\n    count,\r\n    room\r\n  }));\r\n\r\nexport const getBuildings = async () => {\r\n  const buildings = new Scorocode.Query(\"buildings\");\r\n  const items = await buildings.find();\r\n  const { result } = items;\r\n  return _transformBuildingsData(result);\r\n};\r\n\r\nexport const getEquipment = async () => {\r\n  const equipment = new Scorocode.Query(\"equipment\");\r\n  const items = await equipment.find();\r\n  const { result } = items;\r\n  return _transformEquipmentData(result);\r\n};\r\n\r\nexport const addEquipment = async ({ name, id, count }) => {\r\n  const equipment = new Scorocode.Object(\"equipment\");\r\n  equipment.set(\"name\", name);\r\n  equipment.set(\"room\", id);\r\n  equipment.set(\"count\", count);\r\n  const result = await equipment.save();\r\n  return result;\r\n};\r\n\r\nexport const updateEquipment = async ({ id, name, count }) => {\r\n  const equipment = new Scorocode.Object(\"equipment\");\r\n  equipment.set(\"_id\", id);\r\n  equipment.set(\"name\", name);\r\n  equipment.set(\"count\", Number(count));\r\n  const result = await equipment.save();\r\n  return result;\r\n};\r\n\r\nexport const deleteEquipment = async id => {\r\n  const equipment = new Scorocode.Object(\"equipment\");\r\n  const item = equipment.getById(id);\r\n  const result = await equipment.remove(item);\r\n  return result;\r\n};\r\n","import ListItem from './list-item';\r\n\r\nexport default ListItem;\r\n","import React, { Component } from 'react';\r\n\r\nimport './list-item.css';\r\n\r\nclass ListItem extends Component {\r\n  render() {\r\n    const { child, count, selected } = this.props;\r\n    const qty = `(${count})`;\r\n\r\n    let classNames = 'item';\r\n    if (selected) {\r\n      classNames += ' selected';\r\n    }\r\n\r\n    return (\r\n      <div className={classNames} onClick={() => this.props.onClick(child)}>\r\n        <span className={'item-symbol'}></span>\r\n        <span className={'item-name'}>{child.name}</span>\r\n        <span className={'item-count'}>{qty}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItem;\r\n","// проверка (count !== undefined && name !== undefined) чтобы выводить только релевантные ответы\r\nexport const findEquipmentForAllChildren = (child, equipments) => {\r\n  const arrayOfRooms = [];\r\n\r\n  const findEquipForRoom = elem => {\r\n    if (elem.children) {\r\n      if (!arrayOfRooms.some(({ roomId }) => roomId === elem.id)) {\r\n        const { id, name } = elem;\r\n        const result = equipments.filter(\r\n          equip =>\r\n            equip.room === id &&\r\n            equip.count !== undefined &&\r\n            equip.name !== undefined\r\n        );\r\n        if (result.length !== 0) {\r\n          arrayOfRooms.push({\r\n            roomId: id,\r\n            roomName: name,\r\n            equipInfo: result,\r\n          });\r\n        }\r\n      }\r\n      return elem.children.map(el => findEquipForRoom(el));\r\n    }\r\n    const { id, name } = elem;\r\n    const result = equipments.filter(\r\n      equip =>\r\n        equip.room === id &&\r\n        equip.count !== undefined &&\r\n        equip.name !== undefined\r\n    );\r\n    if (result.length !== 0) {\r\n      arrayOfRooms.push({\r\n        roomId: id,\r\n        roomName: name,\r\n        equipInfo: result,\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  findEquipForRoom(child);\r\n\r\n  return arrayOfRooms;\r\n};\r\n\r\nexport const countEquipment = arr => {\r\n  const total = arr.reduce(\r\n    (totalAcc, { equipInfo }) =>\r\n      totalAcc + equipInfo.reduce((acc, { count }) => acc + count, 0),\r\n    0\r\n  );\r\n  return total;\r\n};\r\n","import List from './list';\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport ListItem from '../list-item';\r\nimport {\r\n  findEquipmentForAllChildren,\r\n  countEquipment,\r\n} from '../../helpers/Calculate';\r\n\r\nimport './list.css';\r\n\r\nclass List extends Component {\r\n  handleClickOnItem = item => {\r\n    this.props.itemSelect(item);\r\n  };\r\n\r\n  renderElem = child => {\r\n    const { equipments, selectedItem } = this.props;\r\n    const roomInfo = findEquipmentForAllChildren(child, equipments);\r\n    const totalCount = countEquipment(roomInfo);\r\n\r\n    if (!child.children) {\r\n      return (\r\n        <div key={child.id} name={child.name} className={'list-elem'}>\r\n          <ListItem\r\n            child={child}\r\n            count={totalCount}\r\n            onClick={this.handleClickOnItem}\r\n            selected={child.id === selectedItem.id}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    const { children } = child;\r\n    const childElems = children.map(el => this.renderElem(el));\r\n\r\n    return (\r\n      <div key={child.id} name={child.name} className={'list'}>\r\n        <ListItem\r\n          child={child}\r\n          count={totalCount}\r\n          onClick={this.handleClickOnItem}\r\n          selected={child.id === selectedItem.id}\r\n        />\r\n        <div className={'list-elems'}>{childElems}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { buildings } = this.props;\r\n    const buildingsStructure = buildings.map(building =>\r\n      this.renderElem(building)\r\n    );\r\n    return <div className=\"buildings\">{buildingsStructure}</div>;\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import EquipmentItem from './equipment-item';\r\n\r\nexport default EquipmentItem;\r\n","import React, { Component } from 'react';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport './equipment-item.css';\r\n\r\nclass EquipmentItem extends Component {\r\n  render() {\r\n    const { equipment, roomName } = this.props;\r\n    const { name, count } = equipment;\r\n\r\n    return (\r\n      <div className=\"equipment-item\">\r\n        <div className=\"equipment-room\">{roomName}</div>\r\n        <div className=\"equipment-name\">{name}</div>\r\n        <div className=\"equipment-count\">{count}</div>\r\n        <div className=\"buttons\">\r\n          <div className=\"button button-edit\">\r\n            <i className=\"fas fa-edit\"></i>\r\n          </div>\r\n          <div className=\"button button-delete\">\r\n            <i className=\"fas fa-trash\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipmentItem;\r\n","import EquipmentScreen from './equipment-screen';\r\n\r\nexport default EquipmentScreen;\r\n","import React, { Component } from 'react';\r\nimport { findEquipmentForAllChildren } from '../../helpers/Calculate';\r\nimport EquipmentItem from '../equipment-item';\r\n\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport './equipment-screen.css';\r\n\r\nclass EquipmentScreen extends Component {\r\n  state = {\r\n    currentEquipments: [],\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { equipments, selectedItem } = this.props;\r\n    if (\r\n      selectedItem &&\r\n      (selectedItem !== prevProps.selectedItem ||\r\n        equipments !== prevProps.equipments)\r\n    ) {\r\n      const currentEquipments = findEquipmentForAllChildren(\r\n        selectedItem,\r\n        equipments\r\n      );\r\n      this.setState({ currentEquipments });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.props;\r\n\r\n    let addButton;\r\n\r\n    if (selectedItem && !selectedItem.children) {\r\n      addButton = (\r\n        <div className=\"plus\">\r\n          <i className=\"fas fa-plus-circle\"></i>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"equipments\">\r\n        {addButton}\r\n        {this.state.currentEquipments.map(({ equipInfo, roomName }) =>\r\n          equipInfo.map(el => (\r\n            <EquipmentItem equipment={el} key={el.id} roomName={roomName} />\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipmentScreen;\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { getBuildings, getEquipment } from \"../../helpers/Scorocode\";\r\nimport List from \"../list\";\r\nimport EquipmentScreen from \"../equipment-screen\";\r\n\r\nimport \"./app.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    buildings: [],\r\n    equipments: [],\r\n    selectedItem: 0\r\n  };\r\n\r\n  itemSelect = item => {\r\n    console.info(\"selectedItem\", item);\r\n    this.setState({ selectedItem: item });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const buildings = await getBuildings();\r\n    const equipments = await getEquipment();\r\n    this.setState({ buildings, equipments });\r\n  }\r\n\r\n  render() {\r\n    const { buildings, equipments, selectedItem } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <List\r\n          buildings={buildings}\r\n          equipments={equipments}\r\n          itemSelect={this.itemSelect}\r\n          selectedItem={selectedItem}\r\n        />\r\n        <EquipmentScreen\r\n          buildings={buildings}\r\n          equipments={equipments}\r\n          selectedItem={selectedItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}